# Gradle

# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Docker@2
    displayName: Login
    inputs:
      command: login
      containerRegistry: 'DockerHub - Humberd'

  - task: Docker@2
    displayName: Build linux/amd64
    inputs:
      containerRegistry: 'DockerHub - Humberd'
      repository: 'humberd/notes-app-server'
      command: 'build'
      Dockerfile: 'docker/amd64.Dockerfile'
      tags: amd64-$(Build.BuildId)
      buildContext:

  - task: Docker@2
    displayName: Build linux/arm/v7
    inputs:
      containerRegistry: 'DockerHub - Humberd'
      repository: 'humberd/notes-app-server'
      command: 'build'
      Dockerfile: 'docker/armv7.Dockerfile'
      tags: armv7-$(Build.BuildId)
      buildContext:

  - task: Docker@2
      displayName: Push linux/amd64
      inputs:
        containerRegistry: 'DockerHub - Humberd'
        repository: 'humberd/notes-app-server'
        command: 'push'
        tags: amd64-$(Build.BuildId)

  - task: Docker@2
      displayName: Push linux/arm/v7
      inputs:
        containerRegistry: 'DockerHub - Humberd'
        repository: 'humberd/notes-app-server'
        command: 'push'
        tags: armv7-$(Build.BuildId)

  - task: Docker@2
    displayName: Logout
    condition: always()
    inputs:
      command: logout
      containerRegistry: 'DockerHub - Humberd'
